apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app-deployment
spec:
  replicas: 3 
  selector:
    matchLabels:
      app: todo-app
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - name: todo-app-container
        image: rnkbansal/devops-todo-app:latest # Make sure this is your username
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: todo-app-config
        env:
        - name: SECRET_MESSAGE_FROM_K8S
          valueFrom:
            secretKeyRef:
              name: todo-app-secret
              key: SECRET_MESSAGE

        - name: POSTGRES_HOST
          value: "postgres-service" # This is the magic! Kubernetes DNS lets us use the Service name.
        - name: POSTGRES_DB
          value: "postgres" # This is the default database name in the postgres image
        - name: POSTGRES_USER
          value: "postgres" # This is the default user in the postgres image
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret # The secret we created for postgres
              key: POSTGRES_PASSWORD # The key within that secret
        
        # --- ADD THE LIVENESS PROBE ---
        livenessProbe:
          httpGet:
            path: /healthz/live  # The URL path to check
            port: 3000          # The port inside the container
          initialDelaySeconds: 5  # Wait 5 seconds after the container starts before the first check
          periodSeconds: 10       # Check every 10 seconds

        # --- ADD THE READINESS PROBE ---
        readinessProbe:
          httpGet:
            path: /healthz/ready # The URL path to check
            port: 3000           # The port inside the container
          initialDelaySeconds: 5   # Wait 5 seconds before the first check
          periodSeconds: 10        # Check every 10 seconds
